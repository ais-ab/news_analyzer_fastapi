{"ast":null,"code":"import axios from 'axios';\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  // Use full backend URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Authentication API\nexport const authAPI = {\n  login: async () => {\n    const response = await api.post('/auth/login');\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  }\n};\n\n// Business Interest API\nexport const businessInterestAPI = {\n  create: async data => {\n    const response = await api.post('/analysis/business-interest', data);\n    return response.data;\n  },\n  getAll: async () => {\n    const response = await api.get('/analysis/business-interest');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/analysis/business-interest/${id}`);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await api.delete(`/analysis/business-interest/${id}`);\n    return response.data;\n  }\n};\n\n// Sources API\nexport const sourcesAPI = {\n  getAll: async () => {\n    const response = await api.get('/sources/');\n    return response.data;\n  },\n  add: async data => {\n    console.log('sourcesAPI.add called with:', data);\n    console.log('API base URL:', api.defaults.baseURL);\n    const response = await api.post('/sources/', data);\n    console.log('API response:', response.data);\n    return response.data;\n  },\n  remove: async sourceId => {\n    const response = await api.delete(`/sources/${sourceId}`);\n    return response.data;\n  },\n  getPopular: async () => {\n    const response = await api.get('/sources/popular');\n    return response.data;\n  }\n};\n\n// News Analysis API\nexport const newsAPI = {\n  analyze: async data => {\n    const response = await api.post('/news/analyze', data);\n    return response.data;\n  },\n  getSessions: async () => {\n    const response = await api.get('/news/sessions');\n    return response.data;\n  },\n  getSession: async sessionId => {\n    const response = await api.get(`/news/sessions/${sessionId}`);\n    return response.data;\n  },\n  deleteSession: async sessionId => {\n    const response = await api.delete(`/news/sessions/${sessionId}`);\n    return response.data;\n  }\n};\n\n// Analysis API\nexport const analysisAPI = {\n  getStatistics: async () => {\n    const response = await api.get('/analysis/statistics');\n    return response.data;\n  },\n  getDashboard: async () => {\n    const response = await api.get('/analysis/dashboard');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","post","data","getCurrentUser","get","logout","businessInterestAPI","getAll","getById","id","delete","sourcesAPI","add","console","log","defaults","remove","sourceId","getPopular","newsAPI","analyze","getSessions","getSession","sessionId","deleteSession","analysisAPI","getStatistics","getDashboard"],"sources":["/Users/yousifkashef/PyCharmMiscProject/news_analyzer3/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport {\n  LoginResponse,\n  BusinessInterest,\n  BusinessInterestCreate,\n  Source,\n  SourceCreate,\n  SourceListResponse,\n  PopularSources,\n  NewsAnalysisRequest,\n  NewsAnalysisResponse,\n  AnalysisSession,\n  UserStatistics,\n  DashboardData,\n} from '../types';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',  // Use full backend URL\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Authentication API\nexport const authAPI = {\n  login: async (): Promise<LoginResponse> => {\n    const response = await api.post<LoginResponse>('/auth/login');\n    return response.data;\n  },\n\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n};\n\n// Business Interest API\nexport const businessInterestAPI = {\n  create: async (data: BusinessInterestCreate): Promise<BusinessInterest> => {\n    const response = await api.post<BusinessInterest>('/analysis/business-interest', data);\n    return response.data;\n  },\n\n  getAll: async (): Promise<BusinessInterest[]> => {\n    const response = await api.get<BusinessInterest[]>('/analysis/business-interest');\n    return response.data;\n  },\n\n  getById: async (id: number): Promise<BusinessInterest> => {\n    const response = await api.get<BusinessInterest>(`/analysis/business-interest/${id}`);\n    return response.data;\n  },\n\n  delete: async (id: number) => {\n    const response = await api.delete(`/analysis/business-interest/${id}`);\n    return response.data;\n  },\n};\n\n// Sources API\nexport const sourcesAPI = {\n  getAll: async (): Promise<SourceListResponse> => {\n    const response = await api.get<SourceListResponse>('/sources/');\n    return response.data;\n  },\n\n  add: async (data: SourceCreate): Promise<Source> => {\n    console.log('sourcesAPI.add called with:', data);\n    console.log('API base URL:', api.defaults.baseURL);\n    const response = await api.post<Source>('/sources/', data);\n    console.log('API response:', response.data);\n    return response.data;\n  },\n\n  remove: async (sourceId: number) => {\n    const response = await api.delete(`/sources/${sourceId}`);\n    return response.data;\n  },\n\n  getPopular: async (): Promise<PopularSources> => {\n    const response = await api.get<PopularSources>('/sources/popular');\n    return response.data;\n  },\n};\n\n// News Analysis API\nexport const newsAPI = {\n  analyze: async (data: NewsAnalysisRequest): Promise<NewsAnalysisResponse> => {\n    const response = await api.post<NewsAnalysisResponse>('/news/analyze', data);\n    return response.data;\n  },\n\n  getSessions: async (): Promise<AnalysisSession[]> => {\n    const response = await api.get<AnalysisSession[]>('/news/sessions');\n    return response.data;\n  },\n\n  getSession: async (sessionId: number): Promise<NewsAnalysisResponse> => {\n    const response = await api.get<NewsAnalysisResponse>(`/news/sessions/${sessionId}`);\n    return response.data;\n  },\n\n  deleteSession: async (sessionId: number) => {\n    const response = await api.delete(`/news/sessions/${sessionId}`);\n    return response.data;\n  },\n};\n\n// Analysis API\nexport const analysisAPI = {\n  getStatistics: async (): Promise<UserStatistics> => {\n    const response = await api.get<UserStatistics>('/analysis/statistics');\n    return response.data;\n  },\n\n  getDashboard: async (): Promise<DashboardData> => {\n    const response = await api.get<DashboardData>('/analysis/dashboard');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}